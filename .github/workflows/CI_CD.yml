name: React Frontend CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  DOCKER_IMAGE: ahgouneelhassane/moneysab-frontend
  CONTAINER_NAME: moneysab-frontend
  APP_PORT: 3000

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies and fix babel
        run: |
          npm ci
          npm install --save-dev @babel/plugin-proposal-private-property-in-object

      - name: Build project
        run: npm run build --if-present

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.frontend
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.repository_url }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}

  deploy-frontend:
    needs: build-and-push
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          echo "${{ secrets.EC2_KNOWN_HOSTS }}" > ~/.ssh/known_hosts

      - name: Cleanup previous deployment
        run: |
          ssh -i ~/.ssh/deploy_key \
              ${{ secrets.EC2_SSH_USER }}@${{ secrets.EC2_HOST }} \
              "docker stop ${{ env.CONTAINER_NAME }} || true && \
               docker rm ${{ env.CONTAINER_NAME }} || true"

      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/deploy_key \
              ${{ secrets.EC2_SSH_USER }}@${{ secrets.EC2_HOST }} \
              "docker pull ${{ env.DOCKER_IMAGE }}:${{ github.sha }} && \
               docker run -d \
                 --name ${{ env.CONTAINER_NAME }} \
                 -p ${{ env.APP_PORT }}:80 \
                 --restart unless-stopped \
                 ${{ env.DOCKER_IMAGE }}:${{ github.sha }}"

      - name: Verify deployment
        run: |
          ssh -i ~/.ssh/deploy_key \
              ${{ secrets.EC2_SSH_USER }}@${{ secrets.EC2_HOST }} \
              "docker ps | grep ${{ env.CONTAINER_NAME }} && \
               curl -sSf http://localhost:${{ env.APP_PORT }}"